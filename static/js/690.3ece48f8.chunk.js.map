{"version":3,"file":"static/js/690.3ece48f8.chunk.js","mappings":"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","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/Contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { send } from 'emailjs-com';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nimport { AiOutlineSend, AiFillLinkedin, AiFillGithub, AiOutlineArrowDown } from 'react-icons/ai';\r\n//import gsap from \"gsap\";\r\n//import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\r\nimport { debounce, circleValue, halfviewportWidth} from \"./Functions\";\r\nconst Form = ({coordY, reachedLimitBottom, wheelDelta, pxPerScroll}) => {\r\n    const input1 = useRef(null);\r\n    const input2 = useRef(null);\r\n    const textarea = useRef(null);\r\n    const [placeholderElement, setPlaceholderElement] = useState(null);\r\n    \r\n    const [placeholder, setPlaceholder] = useState({\r\n        input1: 'Tu nombre',\r\n        input2 : 'Tu email',\r\n        textarea : 'Mensaje' \r\n    });\r\n    const _placeholders = {\r\n        input1: 'Tu nombre',\r\n        input2 : 'Tu email',\r\n        textarea : 'Mensaje' \r\n    };\r\n    const circleText = useRef(null);\r\n    const circleTextServices = useRef(null);\r\n    const [circleRotate, setCircleRotate] = useState({value:0});\r\n    const form = useRef(null);\r\n    const name_input = useRef(null);\r\n    const mail_input = useRef(null);\r\n    const submit_input = useRef(null);\r\n    const [toSend, setToSend] = useState({\r\n        from_name: '',\r\n        user_mail: '',\r\n        to_name: 'Álvaro',\r\n        message: ''\r\n    });\r\n    const [inputValue, setInputValue] = useState('Enviar');\r\n    //utilizo useRef ya que si lo hago con useState no funciona bien ya que no se actualiza dentro de la funcion smooth\r\n    const reachedLimitBottomRef = useRef(reachedLimitBottom);\r\n    reachedLimitBottomRef.current = reachedLimitBottom;\r\n    const circleTextYTop = useRef(null);\r\n    const circleTextYBottom = useRef(null);\r\n    const circleAnimation = (wheelDelta, y, element, coordYTop, coordYBottom, transform, obj, value, element2 = null, element3 = null, limitTop = Math.abs(coordY), limitBottom = (Math.abs(coordY) + window.innerHeight)) => {\r\n    \r\n        if (wheelDelta < 0 && coordYTop < limitBottom && (coordYBottom + pxPerScroll) > limitTop) {\r\n            obj.value += value;\r\n        } else if (wheelDelta > 0 && coordYTop < (limitBottom + pxPerScroll) && coordYBottom > limitTop) {\r\n            obj.value -= value;\r\n        } else if (coordYBottom < (limitBottom - pxPerScroll) && coordYBottom > (limitTop - pxPerScroll)) {\r\n            if (wheelDelta > 0)\r\n                obj.value -= value;\r\n        }\r\n        const unit = (transform === 'translateX') ? 'px' : 'deg';\r\n        if (element2 === null) {\r\n            element.style.transform = transform + \"(\" + parseInt(obj.value) + unit + \")\";\r\n        } /*else if (element2.classList.contains('services__item')) {\r\n            if (obj.value > (halfviewportWidth / 2)) obj.value = (halfviewportWidth / 2);\r\n            if (obj.value < 0) obj.value = 0;\r\n            element3.style.transform = transform + \"(\" + parseInt(obj.value) + unit + \")\";\r\n            element2.style.transform = transform + \"(\" + (parseInt(obj.value) * -1) + unit + \")\";\r\n        }\r\n        else {\r\n            //entra aquí con es el swiper\r\n            if(obj.value > 0) obj.value = 0;\r\n            else if(obj.value < -300) obj.value = -300;\r\n            console.log('element', element)\r\n            console.log('element2', element2)\r\n            console.log('element2.style.transform', transform + \"(\" + parseInt(obj.value) + unit + \")\")\r\n            element2.style.transform = transform + \"(\" + parseInt(obj.value) + unit + \")\";\r\n            element3.style.transform = transform + \"(\" + (parseInt(obj.value) * -1) + unit + \")\";\r\n        }*/\r\n    }\r\n    const handleChange = (e) => {\r\n        setToSend({ ...toSend, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const sendEmail = async (e) => {\r\n        e.preventDefault();\r\n\r\n    emailjs.sendForm('service_os2jvcn', 'template_q6ps3ho', form.current, '2R2QCBGBzuH1hvWpo')\r\n      .then((result) => {\r\n          alert(\"El email se ha enviado correctamente\");\r\n      }, (error) => {\r\n        alert(\"Ha habido un error y el correo NO se ha enviado. Escríbeme por whatsapp o linkedin!\");\r\n        //console.log(error.text);\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        let response = '';\r\n        try {\r\n            response = await send(\r\n                'service_os2jvcn',\r\n                'template_q6ps3ho',\r\n                toSend,\r\n                '2R2QCBGBzuH1hvWpo'\r\n            )\r\n        } catch (error) {\r\n            alert('Error! Por favor envíame un correo a mi dirección alvarot2601@gmail.com');\r\n        }\r\n        finally {\r\n            if (response.status === 200) {\r\n                setToSend({\r\n                    from_name: '',\r\n                    user_mail: '',\r\n                    to_name: 'Álvaro',\r\n                    message: ''\r\n                });\r\n                setInputValue('Enviado');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFocus = (key) => {\r\n        setPlaceholder({\r\n            ...placeholder,\r\n            [key]: ''\r\n        });\r\n    }\r\n    const handleBlur = (key) => {\r\n        setPlaceholder({\r\n            ...placeholder,\r\n            [key] : _placeholders[key]\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        if(placeholderElement !== null)\r\n        placeholderElement.placeholder = placeholder;\r\n    }, [placeholderElement]);\r\n    \r\n    useEffect(()=>{\r\n        circleTextYTop.current = circleTextServices.current.getBoundingClientRect().top;\r\n        circleTextYBottom.current = circleTextServices.current.getBoundingClientRect().bottom;\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if(!reachedLimitBottomRef.current || wheelDelta > 0)\r\n        {\r\n            circleAnimation(wheelDelta, coordY, circleTextServices.current, circleTextYTop.current, circleTextYBottom.current, 'rotate', circleRotate, circleValue);\r\n        }\r\n    }, [coordY]);\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        reachedLimitBottomRef.current = reachedLimitBottom;\r\n    }, [reachedLimitBottom]);\r\n\r\n\r\n    useEffect(() => {\r\n        circleText.current.innerHTML = circleText.current.innerHTML.split(\"\").map((char, i) => {\r\n            return `<span style=\"transform:rotate(${i * 9.3}deg)\">${char}</span>`;\r\n        })\r\n            .join('');\r\n\r\n        //gsap\r\n        /* gsap.registerPlugin(ScrollTrigger);\r\n         \r\n \r\n           gsap.to(\"#circle__text-container2\", {\r\n             scrollTrigger: {\r\n                 trigger: \"#circle__text-container2\",\r\n                 start: \"top bottom\",\r\n                 end: \"bottom top\",\r\n                 scrub: true,\r\n                 markers: false\r\n             },\r\n             rotate: 360\r\n           });*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (inputValue === 'Enviado') {\r\n            submit_input.current.style.background = \"#3f826d\";\r\n            submit_input.current.disabled = true;\r\n        }\r\n    }, [inputValue]);\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <section className=\"contact\">\r\n            <div className=\"contact__container pt-[28px] pr-[28px] pb-[30px] pl-[38px] lg:pt-[54px] lg:pr-[72px] lg:pb-[54px] lg:pl-[72px] rounded-[48px] lg:roundex-[86px]\">\r\n                <span className=\"little-title\">¡CONTÁCTAME!</span>\r\n                <p>\r\n                    ¿Tienes alguna pregunta o idea?<br></br>\r\n                    ¿Necesitas ayuda en algún proyecto?<br></br>\r\n                    ¡Contáctame!\r\n                </p>\r\n                <div className=\"contact__subcontainer w-full\">\r\n                    <div className=\"contact__action w-full\">\r\n                        <div>\r\n                            <a href=\"mailto:alvarot2601@gmail.com\" className=\"contact__email\">\r\n                                alvarot2601@gmail.com\r\n                            </a>\r\n                            <a href=\"tel:+34684025751\" className=\"contact__number\">\r\n                                +34 684 025 751\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"w-full flex gap-5 items-center justify-center sm:justify-start\">\r\n                            <a href=\"https://www.linkedin.com/in/alvaro-taibo-developer/\" target=\"_blank\" aria-label=\"Link to my linkedin profile\">\r\n                                <AiFillLinkedin />\r\n                            </a>\r\n                            <a href=\"https://github.com/alvarot2601/\" target=\"_blank\" aria-label=\"Link to my github\">\r\n                                <AiFillGithub />\r\n                            </a>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"circle w-[150px] h-[150px] hidden md:flex items-center justify-center\">\r\n                        <AiOutlineArrowDown className=\"arrow\" />\r\n                        <div className=\"circle__text-container\" id=\"circle__text-container--2\" ref={circleTextServices}>\r\n                            <p className=\"circle__text\" ref={circleText}>\r\n                                CONTÁCTAME | CONTÁCTAME | CONTÁCTAME |\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <form ref={form} method=\"post\" className=\"mt-[4px] gap-[4px]\" onSubmit={sendEmail}>\r\n                <input ref={input1} type=\"text\" id=\"name\" className=\"px-[44px] py-[36px] rounded-[86px] lg:px-[78px] lg:py-[56px]\" name=\"from_name\" placeholder={placeholder.input1} onChange={handleChange} onFocus={()=>handleFocus(\"input1\")} onBlur={()=>handleBlur(\"input1\")} value={toSend.from_name} required />\r\n                <input ref={input2} type=\"email\" id=\"mail\" className=\"px-[44px] py-[36px] rounded-[86px] lg:px-[78px] lg:py-[56px]\" name=\"user_mail\" placeholder={placeholder.input2} onChange={handleChange} onFocus={()=>handleFocus(\"input2\")} onBlur={()=>handleBlur(\"input2\")} value={toSend.user_mail} required />\r\n                <textarea ref={textarea} id=\"message\" className=\"px-[44px] py-[36px] rounded-[48px] lg:px-[78px] lg:py-[56px]\" name=\"message\" placeholder={placeholder.textarea} onChange={handleChange} onFocus={()=>handleFocus(\"textarea\")} onBlur={()=>handleBlur(\"textarea\")} value={toSend.message}>\r\n                </textarea>\r\n                <button type=\"submit\" id=\"submit\" value={inputValue} className=\"submit-input px-[44px] py-[36px] rounded-[48px] lg:px-[78px] lg:py-[56px] \" ref={submit_input}>\r\n                    <AiOutlineSend />\r\n                    Enviar\r\n                </button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\nexport default Form;"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","publicKey","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","coordY","reachedLimitBottom","wheelDelta","pxPerScroll","input1","useRef","input2","textarea","useState","placeholderElement","placeholder","setPlaceholder","_placeholders","circleText","circleTextServices","value","circleRotate","submit_input","from_name","user_mail","to_name","message","toSend","setToSend","inputValue","setInputValue","reachedLimitBottomRef","current","circleTextYTop","circleTextYBottom","handleChange","e","name","sendEmail","preventDefault","emailjs","then","result","alert","error","response","handleFocus","handleBlur","useEffect","getBoundingClientRect","top","bottom","y","element","coordYTop","coordYBottom","transform","obj","element2","limitTop","Math","abs","limitBottom","window","innerHeight","unit","style","parseInt","circleAnimation","circleValue","innerHTML","split","map","char","i","join","background","disabled","className","href","id","ref","method","onSubmit","type","onChange","onFocus","onBlur","required"],"sourceRoot":""}